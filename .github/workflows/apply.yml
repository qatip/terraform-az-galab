name: terraform-apply

on:
  push:
    branches: [ dev, test, prod ]
    paths:
      - '**/*.tf'
      - '.github/workflows/**'

permissions:
  id-token: write
  contents: read

jobs:
  apply:
    runs-on: ubuntu-latest

    env:
      TF_IN_AUTOMATION: true
      ARM_USE_OIDC: true
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VERSION: 1.8.5
      STATE_RG: ${{ vars.STATE_RG }}
      STATE_STORAGE: ${{ vars.STATE_STORAGE }}
      STATE_CONTAINER: ${{ vars.STATE_CONTAINER }}
      ENV: ${{ github.ref_name }}

    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform init (remote state)
        run: |
          terraform init             -backend-config="resource_group_name=${{ env.STATE_RG }}"             -backend-config="storage_account_name=${{ env.STATE_STORAGE }}"             -backend-config="container_name=${{ env.STATE_CONTAINER }}"             -backend-config="key=${{ env.ENV }}.tfstate"

      - name: Terraform plan (idempotent)
        run: |
          terraform plan             -var-file="${{ env.ENV }}.tfvars"             -out="plan.tfplan"

      - name: Terraform apply
        run: terraform apply -auto-approve "plan.tfplan"
